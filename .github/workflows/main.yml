name: Unity-Builder

concurrency:
  group: ci-${{ github.actor }}-${{ github.ref }}-runner
  cancel-in-progress: true

env:
  PROJ_DIR: InSacrosanct
  PROJ_NAME: InSacrosanct
  BUILD_NAME_PREFIX: Build
  BUILD_DIR: build
  BUTLER_LINK: https://broth.itch.zone/butler/windows-amd64/LATEST/archive/default
  ITCH_GAME_NAME: ronnocj/in-sacrosanct


on:
  push:
    branches:
      - main
    paths:
      # Only build when these are changed by the push
      # Actions doesn't support env. variables in this section...
      # Manually type in the project directory raw name to replace 'PROJ_DIR' in the following 3 lines
      - "InSacrosanct/Assets/**"
      - "InSacrosanct/Packages/**"
      - "InSacrosanct/ProjectSettings/**"
  workflow_dispatch:

jobs:
  UnityBuilds:
    runs-on: windows-latest # WWise does not support linux build env
    strategy:
      matrix:
        targetPlatform:
          # - WebGL WWise does not support webgl
          - StandaloneWindows64
          # - StandaloneOSX
          # - StandaloneLinux64
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Git Semantic Version
        uses: paulhatch/semantic-version@v5.4.0
        id: semantic_version
        with:
          # Named version, will be used as suffix for name version tag
          namespace: ${{ env.PROJ_NAME }}
          # If enabled, diagnostic information will be added to the action output.
          debug: true
          # Small project, automatically bump version
          bump_each_commit: true

      - name: Library Cache
        uses: actions/cache@v3
        with:
          path: ${{env.PROJ_DIR}}/Library
          key: Library-${{ env.PROJ_NAME }}-${{ matrix.targetPlatform }}-${{ hashFiles('${{env.PROJ_DIR}}/Assets/**', '${{env.PROJ_DIR}}/Packages/**', '${{env.PROJ_DIR}}/ProjectSettings/**') }}
          restore-keys: |
            Library-${{ env.PROJ_NAME }}-${{ matrix.targetPlatform }}-
            Library-${{ env.PROJ_NAME }}-

      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: auto
          projectPath: ${{env.PROJ_DIR}}
          buildsPath: ${{env.BUILD_PATH}}
          # This is the name of the runnable file (e.g the .exe file)
          buildName: ${{env.PROJ_NAME}}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.BUILD_NAME_PREFIX}}-${{ matrix.targetPlatform }}
          path: ${{env.BUILD_DIR}}/${{ matrix.targetPlatform }}

      # Zip before uploading to itch isn't required, but lower upload size
      - name: Zip Build
        run: Compress-Archive -Path ${{env.BUILD_DIR}}/${{ matrix.targetPlatform }} -Destination ${{env.BUILD_DIR}}/${{env.BUILD_NAME_PREFIX}}-${{ matrix.targetPlatform }}.zip 

      - name: Download Butler
        run: |
          curl -L -o butler.zip ${{env.BUTLER_LINK}}
          Expand-Archive butler.zip
          ls
          cd butler
          ls
          ./butler.exe -V

      - name: Push Build to Butler
        run: |
          ls
          tree
          ./butler/butler.exe push ${{env.BUILD_DIR}}/${{env.BUILD_NAME_PREFIX}}-${{ matrix.targetPlatform }}.zip ${{env.ITCH_GAME_NAME}}:${{ matrix.targetPlatform }} --userversion ${{steps.semantic_version.outputs.version}} 
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
